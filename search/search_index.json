{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Teselas Vectoriales en la IDE Bienvenidos al taller de teselas vectoriales en la IDE. Este manual est\u00e1 publicado aqu\u00ed: https://labs.geomatico.es/taller-vt-jiide !!! danger Requisito imprescindible es tener un navegador con capacidades WebGL. Gui\u00f3n del taller Concepto de tesela vectorial : Qu\u00e9 es, formato pbf, especificaci\u00f3n mvt. [Caso pr\u00e1ctico: PostGIS] Creaci\u00f3n y almacenaje de teselas vectoriales: fichero mbtiles. [Caso pr\u00e1ctico: tippecanoe] Servicio b\u00e1sico de teselas vectoriales: Especificaci\u00f3n TileJSON, servicio XYZ. [Caso pr\u00e1ctico: tilserver-gl] Integraci\u00f3n de teselas vectoriales con servicios est\u00e1ndar OGC. [Caso pr\u00e1ctico: geoserver] Formatos usados para los iconos y las tipograf\u00edas : sprites y glyphs. [Caso pr\u00e1ctico: mapbox/spritezero, openmaptiles/fonts] Especificaci\u00f3n de estilo \"Mapbox GL Style spec\". [Caso pr\u00e1ctico: \"Menorca Online\"] Recursos adicionales Autores Oscar Fonts @oscarfonts , socio trabajador en geomatico.es Wladimir Szczerban (alias Bolo) @bolosig , geostarter (ICGC) Micho Garc\u00eda @michogar , socio trabajador en geomatico.es Condiciones de reutilizaci\u00f3n de estos apuntes Estos materiales est\u00e1n publicados bajo licencia CreativeCommons (by-sa) 4.0 internacional Usted es libre de: Compartir \u2014 copiar y redistribuir el material en cualquier medio o formato Adaptar \u2014 remezclar, transformar y crear a partir del material para cualquier finalidad, incluso comercial. Bajo las condiciones siguientes: Reconocimiento \u2014 Debe reconocer adecuadamente la autor\u00eda, proporcionar un enlace a la licencia e indicar si se han realizado cambios. Puede hacerlo de cualquier manera razonable, pero no de una manera que sugiera que tiene el apoyo del licenciador o lo recibe por el uso que hace. CompartirIgual \u2014 Si remezcla, transforma o crea a partir del material, deber\u00e1 difundir sus contribuciones bajo la misma licencia que el original. No hay restricciones adicionales \u2014 No puede aplicar t\u00e9rminos legales o medidas tecnol\u00f3gicas que legalmente restrinjan realizar aquello que la licencia permite.","title":"Home"},{"location":"index.html#teselas-vectoriales-en-la-ide","text":"Bienvenidos al taller de teselas vectoriales en la IDE. Este manual est\u00e1 publicado aqu\u00ed:","title":"Teselas Vectoriales en la IDE"},{"location":"index.html#httpslabsgeomaticoestaller-vt-jiide","text":"!!! danger Requisito imprescindible es tener un navegador con capacidades WebGL.","title":"https://labs.geomatico.es/taller-vt-jiide"},{"location":"index.html#guion-del-taller","text":"Concepto de tesela vectorial : Qu\u00e9 es, formato pbf, especificaci\u00f3n mvt. [Caso pr\u00e1ctico: PostGIS] Creaci\u00f3n y almacenaje de teselas vectoriales: fichero mbtiles. [Caso pr\u00e1ctico: tippecanoe] Servicio b\u00e1sico de teselas vectoriales: Especificaci\u00f3n TileJSON, servicio XYZ. [Caso pr\u00e1ctico: tilserver-gl] Integraci\u00f3n de teselas vectoriales con servicios est\u00e1ndar OGC. [Caso pr\u00e1ctico: geoserver] Formatos usados para los iconos y las tipograf\u00edas : sprites y glyphs. [Caso pr\u00e1ctico: mapbox/spritezero, openmaptiles/fonts] Especificaci\u00f3n de estilo \"Mapbox GL Style spec\". [Caso pr\u00e1ctico: \"Menorca Online\"] Recursos adicionales","title":"Gui\u00f3n del taller"},{"location":"index.html#autores","text":"Oscar Fonts @oscarfonts , socio trabajador en geomatico.es Wladimir Szczerban (alias Bolo) @bolosig , geostarter (ICGC) Micho Garc\u00eda @michogar , socio trabajador en geomatico.es Condiciones de reutilizaci\u00f3n de estos apuntes Estos materiales est\u00e1n publicados bajo licencia CreativeCommons (by-sa) 4.0 internacional Usted es libre de: Compartir \u2014 copiar y redistribuir el material en cualquier medio o formato Adaptar \u2014 remezclar, transformar y crear a partir del material para cualquier finalidad, incluso comercial. Bajo las condiciones siguientes: Reconocimiento \u2014 Debe reconocer adecuadamente la autor\u00eda, proporcionar un enlace a la licencia e indicar si se han realizado cambios. Puede hacerlo de cualquier manera razonable, pero no de una manera que sugiera que tiene el apoyo del licenciador o lo recibe por el uso que hace. CompartirIgual \u2014 Si remezcla, transforma o crea a partir del material, deber\u00e1 difundir sus contribuciones bajo la misma licencia que el original. No hay restricciones adicionales \u2014 No puede aplicar t\u00e9rminos legales o medidas tecnol\u00f3gicas que legalmente restrinjan realizar aquello que la licencia permite.","title":"Autores"},{"location":"01_que_son.html","text":"Concepto de tesela vectorial Presentaci\u00f3n Ver este cap\u00edtulo en formato presentaci\u00f3n Est\u00e1ndares de codificaci\u00f3n de las teselas vectoriales Transformaci\u00f3n de una capa de datos a una tesela de imagen o tesela vectorial Teselas vectoriales Teselas de imagen Estilo se define en el cliente Estilo se define en el servidor S\u00f3lo se necesita teselar la informaci\u00f3n una sola vez y se pueden tener m\u00faltiples mapas Hay que teselas la informaci\u00f3n para cada mapa Overzoom se mantiene resoluci\u00f3n Overzoom pierde resoluci\u00f3n (pixelado) Menor tama\u00f1o (se recomienda m\u00e1ximo 500kb) M\u00e1s f\u00e1ciles de consumir Cache ocupa mucho menos espacio. F\u00e1ctible el uso en dispositivos m\u00f3viles sin conexi\u00f3n Cache ocupa mucho espacio. Uso en dispositivos m\u00f3viles requiere mucho espacio de disco Acceso nativo a la informaci\u00f3n del objeto (atributos y geometr\u00eda), lo que permite un procesamiento muy sofisticado Se ven mejor en dispositivos de alta resoluci\u00f3n Comparativa pesos teselas vector vs imagen. Fuente https://plot.ly/~mourner/118.embed Overzoom Overzooming es una t\u00e9cnica espec\u00edfica de teselas vectorial que permite que una tesela se represente m\u00e1s all\u00e1 de su nivel de zoom previsto, por lo que contin\u00faa siendo visible en el mapa. Si un conjunto de teselas tiene un minzoom de 6 y un maxzoom de 12, esos son los rangos v\u00e1lidos calculados por el generador de teselas. Si ampliara el mapa m\u00e1s all\u00e1 del nivel de zoom 12, el renderizador del mapa puede seguir utilizando los datos del zoom 12 escalando los datos del vector hacia arriba. Esto, por supuesto, puede dar lugar a grandes simplificaciones de datos si las geometr\u00edas se representan demasiado por encima de su nivel real de detalle. Las teselas imagen pierden claridad si ocurre overzoom. Por ejemplo, si est\u00e1 visualizando un conjunto de teselas imagen con una extensi\u00f3n de zoom entre z0 y z6, si hace un zoom a un nivel de zoom m\u00e1s alto despu\u00e9s de z6, las im\u00e1genes se volver\u00e1n borrosas y dif\u00edciles de ver. Los efectos del overzoom no son tan notables con las teselas vector, ya que los datos vectoriales no se almacenan en un formato basado en p\u00edxeles, sino que se codifican y calculan a partir de una serie de puntos, l\u00edneas y pol\u00edgonos. Overzoom nivel zoom 16 vs nivel zoom 19. Codificaci\u00f3n Las geometr\u00edas y los atributos se codifican como datos binarios de Google Protobuf (PBF). Codificar geometr\u00edas Para codificar informaci\u00f3n geogr\u00e1fica en una tesela vectorial, una herramienta debe convertir las coordenadas geogr\u00e1ficas, como la latitud y la longitud, en coordenadas vectoriales de cuadr\u00edculas. Las teselas de vectoriales no tienen ning\u00fan concepto de informaci\u00f3n geogr\u00e1fica. Codifican puntos, l\u00edneas y pol\u00edgonos como pares x/y relativos a la esquina superior izquierda de la cuadr\u00edcula de forma descendente. Las geometr\u00edas son transformadas a una sola tesela, con un sistema de coordenadas de p\u00edxel local, que por defecto va de la esquina superior izquierda (0,0) a la esquina inferior derecha (4096,4096). Codificar geometr\u00eda. Fuente https://www.mapbox.com/vector-tiles/specification/#encoding-geom Codificar atributos Los atributos se codifican como un conjunto \u00fanico de claves (algo as\u00ed como un esquema de campos de capa) y la lista de sus valores. Los atributos est\u00e1n codificados en una serie de etiquetas que existen dentro de un elemento en el vector que tienen valores enteros que hacen referencia a las claves y los valores que provienen de la geometr\u00eda. Esto elimina la redundancia de los atributos para geometr\u00edas que tienen las mismas claves y valores similares. Codificar atributos. Fuente https://www.mapbox.com/vector-tiles/specification/#encoding-attr Winding order El Winding order (direcci\u00f3n de digitalizaci\u00f3n) se refiere a la direcci\u00f3n en que se dibuja un anillo en un mosaico vectorial, ya sea en sentido horario o antihorario. Muchas geometr\u00edas son multipol\u00edgonos con \"agujeros\", que tambi\u00e9n se representan como anillos de pol\u00edgono. Es importante poder inferir el orden al extraer datos fuente de un mosaico vectorial y comprender si la geometr\u00eda es parte de un pol\u00edgono m\u00faltiple o un pol\u00edgono \u00fanico. Para que los procesadores distingan de manera apropiada que pol\u00edgonos son agujeros y cu\u00e1les son geometr\u00edas \u00fanicas, la especificaci\u00f3n requiere que todos los pol\u00edgonos sean v\u00e1lidos (validez de OGC). Cualquier anillo interior poligonal debe orientarse con el orden opuesto al de su anillo exterior principal y todos los anillos interiores deben seguir directamente el anillo exterior al que pertenecen. Los anillos exteriores deben estar orientados en el sentido de las agujas del reloj y los anillos interiores deben estar orientados en sentido contrario a las agujas del reloj. Winding order. Fuente https://www.mapbox.com/vector-tiles/specification/#winding-order Diferentes especificaciones y conceptos relacionados con las teselas vectoriales pbf Protocol buffers (pbf) desarrollado por Google (para uso interno) es un m\u00e9todo para serializar datos estructurados. Es language-neutral , platform-neutral y en cuyo objetivo de dise\u00f1o enfatizaron la simplicidad y el rendimiento. El m\u00e9todo implica un lenguaje de descripci\u00f3n de interfaz ( .proto ) que describe la estructura de algunos datos y un programa que genera c\u00f3digo fuente a partir de esa descripci\u00f3n para generar o analizar una secuencia de bytes que representa los datos estructurados. mvt Formato binario basado en la especificaci\u00f3n de Mapbox que usa pbf para serializar datos geogr\u00e1ficos. Los archivos deber\u00edan tener extensi\u00f3n .mvt pero no es obligatorio as\u00ed que se pueden encontrar archivos con extensi\u00f3n .pbf, .vector.pbf o .mvt.gz (compresi\u00f3n gzip) Por ejemplo un conjunto de teselas mvt almacenadas en un SQLite siguiendo una esquema espec\u00edfico formar\u00eda un MBTiles. Caso pr\u00e1ctico: Generando teselas vectoriales con PostGIS Desde PostGIS 2.4.0 existe la funci\u00f3n ST_AsMVT para generar teselas directamente con SQL. A partir de los recursos de este enlace: https://github.com/geomatico/taller-vt-jiide/tree/master/ejercicios/01 Cargar la base de datos vt_dump , que contiene los barrios de Barcelona, mediante psql. El comando ser\u00eda: 1 sudo -u postgres psql < vt_dump.sql Conect\u00e1ndonos a la nueva base de datos vt , con usuario vt , y password vt : Ejecutamos la consulta que nos devuelve la tesela de zoom=13, x=4145 e y=3059, de la siguiente manera: 1 2 3 4 5 6 7 8 9 10 SELECT ST_AsMVT ( q , 'mvt_barrios' ) FROM ( SELECT gid , n_barri , ST_AsMVTGeom ( geom , ST_TileEnvelope ( 13 , 4145 , 3059 ) ) AS geom FROM barrios WHERE geom && ST_TileEnvelope ( 13 , 4145 , 3059 ) ) AS q ; La tesela resultante corresponder\u00eda a este \u00e1rea de Barcelona: Obviamente, generar una sola tesela no tiene sentido. Pero ya tenemos la pieza principal para construir un generador de pir\u00e1mides de teselas, o construir un servicio web de tipo {z}/{x}/{y} . Esta capacidad la utilizan m\u00faltiples implementaciones como tegola, t-rex, o el generador de teselas de OpenMapTiles, llamado postserve .","title":"1. Qu\u00e9 son"},{"location":"01_que_son.html#concepto-de-tesela-vectorial","text":"Presentaci\u00f3n Ver este cap\u00edtulo en formato presentaci\u00f3n","title":"Concepto de tesela vectorial"},{"location":"01_que_son.html#estandares-de-codificacion-de-las-teselas-vectoriales","text":"Transformaci\u00f3n de una capa de datos a una tesela de imagen o tesela vectorial Teselas vectoriales Teselas de imagen Estilo se define en el cliente Estilo se define en el servidor S\u00f3lo se necesita teselar la informaci\u00f3n una sola vez y se pueden tener m\u00faltiples mapas Hay que teselas la informaci\u00f3n para cada mapa Overzoom se mantiene resoluci\u00f3n Overzoom pierde resoluci\u00f3n (pixelado) Menor tama\u00f1o (se recomienda m\u00e1ximo 500kb) M\u00e1s f\u00e1ciles de consumir Cache ocupa mucho menos espacio. F\u00e1ctible el uso en dispositivos m\u00f3viles sin conexi\u00f3n Cache ocupa mucho espacio. Uso en dispositivos m\u00f3viles requiere mucho espacio de disco Acceso nativo a la informaci\u00f3n del objeto (atributos y geometr\u00eda), lo que permite un procesamiento muy sofisticado Se ven mejor en dispositivos de alta resoluci\u00f3n Comparativa pesos teselas vector vs imagen. Fuente https://plot.ly/~mourner/118.embed","title":"Est\u00e1ndares de codificaci\u00f3n de las teselas vectoriales"},{"location":"01_que_son.html#overzoom","text":"Overzooming es una t\u00e9cnica espec\u00edfica de teselas vectorial que permite que una tesela se represente m\u00e1s all\u00e1 de su nivel de zoom previsto, por lo que contin\u00faa siendo visible en el mapa. Si un conjunto de teselas tiene un minzoom de 6 y un maxzoom de 12, esos son los rangos v\u00e1lidos calculados por el generador de teselas. Si ampliara el mapa m\u00e1s all\u00e1 del nivel de zoom 12, el renderizador del mapa puede seguir utilizando los datos del zoom 12 escalando los datos del vector hacia arriba. Esto, por supuesto, puede dar lugar a grandes simplificaciones de datos si las geometr\u00edas se representan demasiado por encima de su nivel real de detalle. Las teselas imagen pierden claridad si ocurre overzoom. Por ejemplo, si est\u00e1 visualizando un conjunto de teselas imagen con una extensi\u00f3n de zoom entre z0 y z6, si hace un zoom a un nivel de zoom m\u00e1s alto despu\u00e9s de z6, las im\u00e1genes se volver\u00e1n borrosas y dif\u00edciles de ver. Los efectos del overzoom no son tan notables con las teselas vector, ya que los datos vectoriales no se almacenan en un formato basado en p\u00edxeles, sino que se codifican y calculan a partir de una serie de puntos, l\u00edneas y pol\u00edgonos. Overzoom nivel zoom 16 vs nivel zoom 19.","title":"Overzoom"},{"location":"01_que_son.html#codificacion","text":"Las geometr\u00edas y los atributos se codifican como datos binarios de Google Protobuf (PBF).","title":"Codificaci\u00f3n"},{"location":"01_que_son.html#codificar-geometrias","text":"Para codificar informaci\u00f3n geogr\u00e1fica en una tesela vectorial, una herramienta debe convertir las coordenadas geogr\u00e1ficas, como la latitud y la longitud, en coordenadas vectoriales de cuadr\u00edculas. Las teselas de vectoriales no tienen ning\u00fan concepto de informaci\u00f3n geogr\u00e1fica. Codifican puntos, l\u00edneas y pol\u00edgonos como pares x/y relativos a la esquina superior izquierda de la cuadr\u00edcula de forma descendente. Las geometr\u00edas son transformadas a una sola tesela, con un sistema de coordenadas de p\u00edxel local, que por defecto va de la esquina superior izquierda (0,0) a la esquina inferior derecha (4096,4096). Codificar geometr\u00eda. Fuente https://www.mapbox.com/vector-tiles/specification/#encoding-geom","title":"Codificar geometr\u00edas"},{"location":"01_que_son.html#codificar-atributos","text":"Los atributos se codifican como un conjunto \u00fanico de claves (algo as\u00ed como un esquema de campos de capa) y la lista de sus valores. Los atributos est\u00e1n codificados en una serie de etiquetas que existen dentro de un elemento en el vector que tienen valores enteros que hacen referencia a las claves y los valores que provienen de la geometr\u00eda. Esto elimina la redundancia de los atributos para geometr\u00edas que tienen las mismas claves y valores similares. Codificar atributos. Fuente https://www.mapbox.com/vector-tiles/specification/#encoding-attr","title":"Codificar atributos"},{"location":"01_que_son.html#winding-order","text":"El Winding order (direcci\u00f3n de digitalizaci\u00f3n) se refiere a la direcci\u00f3n en que se dibuja un anillo en un mosaico vectorial, ya sea en sentido horario o antihorario. Muchas geometr\u00edas son multipol\u00edgonos con \"agujeros\", que tambi\u00e9n se representan como anillos de pol\u00edgono. Es importante poder inferir el orden al extraer datos fuente de un mosaico vectorial y comprender si la geometr\u00eda es parte de un pol\u00edgono m\u00faltiple o un pol\u00edgono \u00fanico. Para que los procesadores distingan de manera apropiada que pol\u00edgonos son agujeros y cu\u00e1les son geometr\u00edas \u00fanicas, la especificaci\u00f3n requiere que todos los pol\u00edgonos sean v\u00e1lidos (validez de OGC). Cualquier anillo interior poligonal debe orientarse con el orden opuesto al de su anillo exterior principal y todos los anillos interiores deben seguir directamente el anillo exterior al que pertenecen. Los anillos exteriores deben estar orientados en el sentido de las agujas del reloj y los anillos interiores deben estar orientados en sentido contrario a las agujas del reloj. Winding order. Fuente https://www.mapbox.com/vector-tiles/specification/#winding-order","title":"Winding order"},{"location":"01_que_son.html#diferentes-especificaciones-y-conceptos-relacionados-con-las-teselas-vectoriales","text":"","title":"Diferentes especificaciones y conceptos relacionados con las teselas vectoriales"},{"location":"01_que_son.html#pbf","text":"Protocol buffers (pbf) desarrollado por Google (para uso interno) es un m\u00e9todo para serializar datos estructurados. Es language-neutral , platform-neutral y en cuyo objetivo de dise\u00f1o enfatizaron la simplicidad y el rendimiento. El m\u00e9todo implica un lenguaje de descripci\u00f3n de interfaz ( .proto ) que describe la estructura de algunos datos y un programa que genera c\u00f3digo fuente a partir de esa descripci\u00f3n para generar o analizar una secuencia de bytes que representa los datos estructurados.","title":"pbf"},{"location":"01_que_son.html#mvt","text":"Formato binario basado en la especificaci\u00f3n de Mapbox que usa pbf para serializar datos geogr\u00e1ficos. Los archivos deber\u00edan tener extensi\u00f3n .mvt pero no es obligatorio as\u00ed que se pueden encontrar archivos con extensi\u00f3n .pbf, .vector.pbf o .mvt.gz (compresi\u00f3n gzip) Por ejemplo un conjunto de teselas mvt almacenadas en un SQLite siguiendo una esquema espec\u00edfico formar\u00eda un MBTiles.","title":"mvt"},{"location":"01_que_son.html#caso-practico-generando-teselas-vectoriales-con-postgis","text":"Desde PostGIS 2.4.0 existe la funci\u00f3n ST_AsMVT para generar teselas directamente con SQL. A partir de los recursos de este enlace: https://github.com/geomatico/taller-vt-jiide/tree/master/ejercicios/01 Cargar la base de datos vt_dump , que contiene los barrios de Barcelona, mediante psql. El comando ser\u00eda: 1 sudo -u postgres psql < vt_dump.sql Conect\u00e1ndonos a la nueva base de datos vt , con usuario vt , y password vt : Ejecutamos la consulta que nos devuelve la tesela de zoom=13, x=4145 e y=3059, de la siguiente manera: 1 2 3 4 5 6 7 8 9 10 SELECT ST_AsMVT ( q , 'mvt_barrios' ) FROM ( SELECT gid , n_barri , ST_AsMVTGeom ( geom , ST_TileEnvelope ( 13 , 4145 , 3059 ) ) AS geom FROM barrios WHERE geom && ST_TileEnvelope ( 13 , 4145 , 3059 ) ) AS q ; La tesela resultante corresponder\u00eda a este \u00e1rea de Barcelona: Obviamente, generar una sola tesela no tiene sentido. Pero ya tenemos la pieza principal para construir un generador de pir\u00e1mides de teselas, o construir un servicio web de tipo {z}/{x}/{y} . Esta capacidad la utilizan m\u00faltiples implementaciones como tegola, t-rex, o el generador de teselas de OpenMapTiles, llamado postserve .","title":"Caso pr\u00e1ctico: Generando teselas vectoriales con PostGIS"},{"location":"02_crearlas.html","text":"Creaci\u00f3n y almacenaje de teselas vectoriales Generar las teselas vectoriales al vuelo es lento, y se recomienda, en la medida de lo posible, tenerlas cacheadas. Almacenar una pir\u00e1mide de teselas en una estructura de directorios, cuando se tiene una cantidad importante de datos, es tambi\u00e9n ineficiente, por lo que Mapbox cre\u00f3 el formato mbtiles. Especificaci\u00f3n .mbtiles Mbtiles contiene toda una pir\u00e1mide de teselas en un solo fichero, que es una BDD sqlite. Pir\u00e1mide de teselas guardada en una BDD SQLite, con un esquema determinado. Tablas principales: Vista tiles zoom_level tile_column tile_row tile_data {z} {x} {y} {BLOB} Tabla metadata name value format \" pbf \" attribution \"(c) OpenStreetMap...\" minZoom 0 maxZoom 14 BBOX -180,-85.06,180,85.06 json (capas contenidas en cada tesela, y su \"feature type\") Tip Un fichero mbtiles puede contener teselas de cualquier tipo, tambi\u00e9n de formato imagen. Esto no se deduce de la extensi\u00f3n del fichero. Warning Mbtiles no es equivalente a geopackage. Aunque ambos son esencialmente una BDD SQLite, guardan los datos en una estructura distinta y tienen diferente prop\u00f3sito. Tippecanoe Tippecanoe es la herramienta que permite crear teselas vectoriales de grandes colecciones de elementos en formato GeoJSON. El objetivo de Tippecanoe es permitir una visi\u00f3n de sus datos independiente de la escala, de modo que en cualquier nivel, desde el mundo entero hasta un solo edificio, se pueda apreciar la densidad y la textura de los datos, en lugar de una simplificaci\u00f3n geom\u00e9trica, que puede eliminar v\u00e9rtices importantes que cambien la apariencia de los datos en su versi\u00f3n simplificada. Algunos ejemplos: Teniendo todo el callejero de OpenStreetMap, la vista general devolver\u00e1 algo que se parece a \"Todas las calles\" en lugar de algo que parece un atlas de carreteras interestatal. Teniendo todas las plantas de edificios de una ciudad, en la vista general donde los edificios individuales ya no sean perceptibles, a\u00fan deber\u00edas poder ver la extensi\u00f3n y variedad del desarrollo en cada vecindario, no solo para los edificios m\u00e1s voluminosos. Esto hace que la calidad de los resultados de Tippecanoe sea muy superior a otras alternativas, que utilizan algoritmos de simplificaci\u00f3n m\u00e1s convencionales, motivo por el cual lo recomendamos en este taller. Adem\u00e1s, es sorprendentemente r\u00e1pido procesando los datos. Caso pr\u00e1ctico: generaci\u00f3n de una pir\u00e1mide de teselas vectoriales Instalar mapbox/tippecanoe . Esto es muy sencillo en un Mac con brew, algo menos sencillo en Ubuntu (hay que asegurarse de tener todas las dependencias y compilar), y no est\u00e1 definido c\u00f3mo compilarlo en Windows. Tip Tambi\u00e9n se puede usar alguna de las im\u00e1genes docker disponibles. A partir del fichero buildings.geojson en: https://github.com/geomatico/taller-vt-jiide/tree/master/ejercicios/02 Ejecutar el comando de tippecanoe: 1 tippecanoe -L buildingpart:buildingpart.geojson -Z 12 -z 16 -n \"Catastro Building Parts\" -o buildingpart.mbtiles -A \"Catastro\" Esto generar\u00e1 el fichero buildings.mbtiles . Abrir el fichero resultante con un administrador de bases de datos SQLite, y se podr\u00e1 observar la estructura de datos mencionada. QGIS tiene un plugin llamado \"Vector Tiles Reader\" para poder visualizar los datos. No es muy r\u00e1pido ni estable, pero puede servir para inspeccionar los datos.","title":"2. C\u00f3mo crearlas"},{"location":"02_crearlas.html#creacion-y-almacenaje-de-teselas-vectoriales","text":"Generar las teselas vectoriales al vuelo es lento, y se recomienda, en la medida de lo posible, tenerlas cacheadas. Almacenar una pir\u00e1mide de teselas en una estructura de directorios, cuando se tiene una cantidad importante de datos, es tambi\u00e9n ineficiente, por lo que Mapbox cre\u00f3 el formato mbtiles.","title":"Creaci\u00f3n y almacenaje de teselas vectoriales"},{"location":"02_crearlas.html#especificacion-mbtiles","text":"Mbtiles contiene toda una pir\u00e1mide de teselas en un solo fichero, que es una BDD sqlite. Pir\u00e1mide de teselas guardada en una BDD SQLite, con un esquema determinado. Tablas principales:","title":"Especificaci\u00f3n .mbtiles"},{"location":"02_crearlas.html#vista-tiles","text":"zoom_level tile_column tile_row tile_data {z} {x} {y} {BLOB}","title":"Vista tiles"},{"location":"02_crearlas.html#tabla-metadata","text":"name value format \" pbf \" attribution \"(c) OpenStreetMap...\" minZoom 0 maxZoom 14 BBOX -180,-85.06,180,85.06 json (capas contenidas en cada tesela, y su \"feature type\") Tip Un fichero mbtiles puede contener teselas de cualquier tipo, tambi\u00e9n de formato imagen. Esto no se deduce de la extensi\u00f3n del fichero. Warning Mbtiles no es equivalente a geopackage. Aunque ambos son esencialmente una BDD SQLite, guardan los datos en una estructura distinta y tienen diferente prop\u00f3sito.","title":"Tabla metadata"},{"location":"02_crearlas.html#tippecanoe","text":"Tippecanoe es la herramienta que permite crear teselas vectoriales de grandes colecciones de elementos en formato GeoJSON. El objetivo de Tippecanoe es permitir una visi\u00f3n de sus datos independiente de la escala, de modo que en cualquier nivel, desde el mundo entero hasta un solo edificio, se pueda apreciar la densidad y la textura de los datos, en lugar de una simplificaci\u00f3n geom\u00e9trica, que puede eliminar v\u00e9rtices importantes que cambien la apariencia de los datos en su versi\u00f3n simplificada. Algunos ejemplos: Teniendo todo el callejero de OpenStreetMap, la vista general devolver\u00e1 algo que se parece a \"Todas las calles\" en lugar de algo que parece un atlas de carreteras interestatal. Teniendo todas las plantas de edificios de una ciudad, en la vista general donde los edificios individuales ya no sean perceptibles, a\u00fan deber\u00edas poder ver la extensi\u00f3n y variedad del desarrollo en cada vecindario, no solo para los edificios m\u00e1s voluminosos. Esto hace que la calidad de los resultados de Tippecanoe sea muy superior a otras alternativas, que utilizan algoritmos de simplificaci\u00f3n m\u00e1s convencionales, motivo por el cual lo recomendamos en este taller. Adem\u00e1s, es sorprendentemente r\u00e1pido procesando los datos.","title":"Tippecanoe"},{"location":"02_crearlas.html#caso-practico-generacion-de-una-piramide-de-teselas-vectoriales","text":"Instalar mapbox/tippecanoe . Esto es muy sencillo en un Mac con brew, algo menos sencillo en Ubuntu (hay que asegurarse de tener todas las dependencias y compilar), y no est\u00e1 definido c\u00f3mo compilarlo en Windows. Tip Tambi\u00e9n se puede usar alguna de las im\u00e1genes docker disponibles. A partir del fichero buildings.geojson en: https://github.com/geomatico/taller-vt-jiide/tree/master/ejercicios/02 Ejecutar el comando de tippecanoe: 1 tippecanoe -L buildingpart:buildingpart.geojson -Z 12 -z 16 -n \"Catastro Building Parts\" -o buildingpart.mbtiles -A \"Catastro\" Esto generar\u00e1 el fichero buildings.mbtiles . Abrir el fichero resultante con un administrador de bases de datos SQLite, y se podr\u00e1 observar la estructura de datos mencionada. QGIS tiene un plugin llamado \"Vector Tiles Reader\" para poder visualizar los datos. No es muy r\u00e1pido ni estable, pero puede servir para inspeccionar los datos.","title":"Caso pr\u00e1ctico: generaci\u00f3n de una pir\u00e1mide de teselas vectoriales"},{"location":"03_servirlas.html","text":"Servicio b\u00e1sico de teselas vectoriales Un servicio de teselas a la google o de tipo \"XYZ\" consiste en una URL donde se sustituyen los valores de zoom, fila y columna siguiendo una plantilla, como en: https://tileserver.geomatico.es/data/building_latest/{z}/{x}/{y}.pbf Se supone una proyecci\u00f3n determinada, EPSG:3857 , y un esquema de teselado determinado. Nada se sabe sobre el rango de zooms o el \u00e1mbito geogr\u00e1fico de los datos (BBXOX), su atribuci\u00f3n, o su contenido. Por ello mapbox ide\u00f3 un fichero de metadatos para publicar esta informaci\u00f3n de forma est\u00e1ndar: la especificaci\u00f3n TileJSON . Especificaci\u00f3n TileJSON Este fichero de \"metadatos\" vendr\u00eda a ser algo entre un GetCapabilities de m\u00ednimos, y un DescribeFeatureType: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 { \"tilejson\" : \"2.0.0\" , \"name\" : \"buildingparts\" , \"tiles\" :[ \"https://tileserver.geomatico.es/data/building_latest/{z}/{x}/{y}.pbf\" ], \"minzoom\" : 10 , \"maxzoom\" : 15 , \"bounds\" : [ -18.1604 , 27.634874 , 4.317627 , 43.794889 ], \"type\" : \"overlay\" , \"attribution\" : \"Catastro\" , \"vector_layers\" : [ { \"id\" : \"buildingparts\" , \"minzoom\" : 10 , \"maxzoom\" : 15 , \"fields\" : { \"area\" : \"Number\" , \"coc\" : \"String\" , \"cu\" : \"String\" , \"floors\" : \"Number\" , \"nbu\" : \"Number\" , \"ndw\" : \"Number\" , \"parcel\" : \"String\" , \"year\" : \"String\" } } ] } Caso pr\u00e1ctico: Explorando una instancia de Tileserver GL TileServer GL es un servidor de mapas de c\u00f3digo abierto creado para teselas vectoriales, y capaz de renderizar en teselas raster con MapBox GL Native engine en el lado del servidor. Proporciona mapas para aplicaciones web y m\u00f3viles. Es compatibles con Mapbox GL JS, Android SDK, iOS SDK, Leaflet, OpenLayers, HighDPI/Retina, SIG a trav\u00e9s de WMTS, etc. Si se quiere servir teselas raster lo mejor es utilizar la versi\u00f3n de Docker ya que son necesarias algunas librer\u00edas nativas que pueden variar dependiendo de la plataforma, estas librer\u00edas sirven para renderizar las teselas vectoriales en teselas raster. Si \u00fanicamente se quiere servir teselas vectoriales se puede utilizar el TileServer GL Light, que no tiene ninguna dependencia nativa ya que est\u00e1 desarrollado en javascript. Abrir https://tileserver.geomatico.es en un navegador Explorar la secci\u00f3n \"DATA\": Documento TileJSON Inspect Explorar la secci\u00f3n \"STYLES\": Documento TileJSON . No siempre. Diferencias con el anterior. Viewers: Vector y Raster. Similitudes y diferencias. Servicio WMTS. S\u00f3lo para imagen. Estructura de un documento GL Style: Sprites Glyphs (y el endpoint oculto: https://tileserver.geomatico.es/fonts.json ) Sources Layers","title":"3. C\u00f3mo servirlas"},{"location":"03_servirlas.html#servicio-basico-de-teselas-vectoriales","text":"Un servicio de teselas a la google o de tipo \"XYZ\" consiste en una URL donde se sustituyen los valores de zoom, fila y columna siguiendo una plantilla, como en: https://tileserver.geomatico.es/data/building_latest/{z}/{x}/{y}.pbf Se supone una proyecci\u00f3n determinada, EPSG:3857 , y un esquema de teselado determinado. Nada se sabe sobre el rango de zooms o el \u00e1mbito geogr\u00e1fico de los datos (BBXOX), su atribuci\u00f3n, o su contenido. Por ello mapbox ide\u00f3 un fichero de metadatos para publicar esta informaci\u00f3n de forma est\u00e1ndar: la especificaci\u00f3n TileJSON .","title":"Servicio b\u00e1sico de teselas vectoriales"},{"location":"03_servirlas.html#especificacion-tilejson","text":"Este fichero de \"metadatos\" vendr\u00eda a ser algo entre un GetCapabilities de m\u00ednimos, y un DescribeFeatureType: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 { \"tilejson\" : \"2.0.0\" , \"name\" : \"buildingparts\" , \"tiles\" :[ \"https://tileserver.geomatico.es/data/building_latest/{z}/{x}/{y}.pbf\" ], \"minzoom\" : 10 , \"maxzoom\" : 15 , \"bounds\" : [ -18.1604 , 27.634874 , 4.317627 , 43.794889 ], \"type\" : \"overlay\" , \"attribution\" : \"Catastro\" , \"vector_layers\" : [ { \"id\" : \"buildingparts\" , \"minzoom\" : 10 , \"maxzoom\" : 15 , \"fields\" : { \"area\" : \"Number\" , \"coc\" : \"String\" , \"cu\" : \"String\" , \"floors\" : \"Number\" , \"nbu\" : \"Number\" , \"ndw\" : \"Number\" , \"parcel\" : \"String\" , \"year\" : \"String\" } } ] }","title":"Especificaci\u00f3n TileJSON"},{"location":"03_servirlas.html#caso-practico-explorando-una-instancia-de-tileserver-gl","text":"TileServer GL es un servidor de mapas de c\u00f3digo abierto creado para teselas vectoriales, y capaz de renderizar en teselas raster con MapBox GL Native engine en el lado del servidor. Proporciona mapas para aplicaciones web y m\u00f3viles. Es compatibles con Mapbox GL JS, Android SDK, iOS SDK, Leaflet, OpenLayers, HighDPI/Retina, SIG a trav\u00e9s de WMTS, etc. Si se quiere servir teselas raster lo mejor es utilizar la versi\u00f3n de Docker ya que son necesarias algunas librer\u00edas nativas que pueden variar dependiendo de la plataforma, estas librer\u00edas sirven para renderizar las teselas vectoriales en teselas raster. Si \u00fanicamente se quiere servir teselas vectoriales se puede utilizar el TileServer GL Light, que no tiene ninguna dependencia nativa ya que est\u00e1 desarrollado en javascript. Abrir https://tileserver.geomatico.es en un navegador Explorar la secci\u00f3n \"DATA\": Documento TileJSON Inspect Explorar la secci\u00f3n \"STYLES\": Documento TileJSON . No siempre. Diferencias con el anterior. Viewers: Vector y Raster. Similitudes y diferencias. Servicio WMTS. S\u00f3lo para imagen. Estructura de un documento GL Style: Sprites Glyphs (y el endpoint oculto: https://tileserver.geomatico.es/fonts.json ) Sources Layers","title":"Caso pr\u00e1ctico: Explorando una instancia de Tileserver GL"},{"location":"04_OGC.html","text":"Integraci\u00f3n de las teselas vectoriales con servicios est\u00e1ndar OGC Las teselas vectoriales est\u00e1n pensadas para su visualizaci\u00f3n , no son un servicio de descarga . Por tanto, la manera de servirlas mediante est\u00e1ndares OGC es usando WMTS para la versi\u00f3n teselada, e incluso WMTS si quisi\u00e9ramos servir el mismo formato pero sin el teselado. En definitiva, podr\u00edamos considerar las teselas vectoriales como un nuevo formato de \"imagen\". Igual que tenemos image/jpeg o image/png , podr\u00edamos inclu\u00edr un nuevo tipo MIME en las capabilities de nuestros servicios WMS y WMTS que sirviera los datos codificados en MVT. Esto es precisamente lo que hace la extensi\u00f3n Vector Tiles de GeoServer cuando define el nuevo tipo MIME: 1 application/vnd.mapbox-vector-tile Caso pr\u00e1ctico: La extensi\u00f3n Vector Tiles de GeoServer Entrar en https://ide.cime.es/geoserver2/ Explorar el GetCapabilities del servicio WMS. Buscar c\u00f3mo est\u00e1n anunciadas las capas de teselas vectoriales. Explorar las Capabilities de los servicios WMTS, TMS y WMS-C, y comprobar si existen capas de teselas vectoriales. Entrar como administrador, y observar c\u00f3mo est\u00e1 configurado GeoWebCach\u00e9 para las capas que sirven teselas vectoriales. Discutir ventajas y limitaciones de GeoServer. Ejemplos de integraci\u00f3n con otros servicios de OGC WMS: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"sources\" : { \"pnoa-source\" : { \"type\" : \"raster\" , \"tiles\" : [ \"http://www.ign.es/wms-inspire/pnoa-ma?bbox={bbox-epsg-3857}&format=image/jpeg&service=WMS&version=1.1.1&request=GetMap&srs=EPSG:3857&width=256&height=256&layers=OI.OrthoimageCoverage\" ], \"tileSize\" : 256 } }, \"layers\" : [{ \"id\" : \"pnoa-layer\" , \"type\" : \"raster\" , \"source\" : \"pnoa-source\" }] } DEMO WMS imagen WMTS: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 { \"sources\" : { \"wmts-source\" : { \"type\" : \"raster\" , \"tiles\" : [ \"http://www.ign.es/wmts/pnoa-ma?Layer=OI.OrthoimageCoverage&Style=default&TileMatrixSet=GoogleMapsCompatible&Service=WMTS&Request=GetTile&Version=1.0.0&Format=image/jpeg&TileMatrix={z}&TileCol={x}&TileRow={y}\" ], \"tileSize\" : 256 } }, \"layers\" : [{ \"id\" : \"wmts-layer\" , \"type\" : \"raster\" , \"source\" : \"wmts-source\" }] } DEMO WMTS imagen WFS: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 { \"sources\" : { \"geojson-source\" : { \"type\" : \"geojson\" , \"data\" : \"http://demo.fonts.cat/geoserver/wfs?SERVICE=WFS&VERSION=1.1.0&REQUEST=GetFeature&TYPENAME=TMB:LINIES_METRO&outputFormat=json&srsName=EPSG:4326\" } }, \"layers\" : [{ \"id\" : \"geojson-layer\" , \"type\" : \"line\" , \"source\" : \"geojson-source\" , \"paint\" : { \"line-width\" : 5 , \"line-color\" : [ \"concat\" , \"#\" , [ \"get\" , \"COLOR_LINIA\" ]] } }] } DEMO WMTS imagen + WFS GeoJSON Teselas Vectoriales como TMS: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 { \"sources\" : { \"vectortile-tms-source\" : { \"type\" : \"vector\" , \"tiles\" : [ \"http://demo.fonts.cat:8000/geoserver/gwc/service/tms/1.0.0/TMB%3ALINIES_METRO@EPSG%3A900913@pbf/{z}/{x}/{y}.pbf\" ], \"scheme\" : \"tms\" } }, \"layers\" : [{ \"id\" : \"vectortile-layer\" , \"type\" : \"line\" , \"source\" : \"vectortile-tms-source\" , \"source-layer\" : \"LINIES_METRO\" , \"paint\" : { \"line-width\" : 5 , \"line-color\" : [ \"concat\" , \"#\" , [ \"get\" , \"COLOR_LINIA\" ]] } }] } DEMO WMTS imagen + Vector Tile TMS","title":"4. Servicios est\u00e1ndar"},{"location":"04_OGC.html#integracion-de-las-teselas-vectoriales-con-servicios-estandar-ogc","text":"Las teselas vectoriales est\u00e1n pensadas para su visualizaci\u00f3n , no son un servicio de descarga . Por tanto, la manera de servirlas mediante est\u00e1ndares OGC es usando WMTS para la versi\u00f3n teselada, e incluso WMTS si quisi\u00e9ramos servir el mismo formato pero sin el teselado. En definitiva, podr\u00edamos considerar las teselas vectoriales como un nuevo formato de \"imagen\". Igual que tenemos image/jpeg o image/png , podr\u00edamos inclu\u00edr un nuevo tipo MIME en las capabilities de nuestros servicios WMS y WMTS que sirviera los datos codificados en MVT. Esto es precisamente lo que hace la extensi\u00f3n Vector Tiles de GeoServer cuando define el nuevo tipo MIME: 1 application/vnd.mapbox-vector-tile","title":"Integraci\u00f3n de las teselas vectoriales con servicios est\u00e1ndar OGC"},{"location":"04_OGC.html#caso-practico-la-extension-vector-tiles-de-geoserver","text":"Entrar en https://ide.cime.es/geoserver2/ Explorar el GetCapabilities del servicio WMS. Buscar c\u00f3mo est\u00e1n anunciadas las capas de teselas vectoriales. Explorar las Capabilities de los servicios WMTS, TMS y WMS-C, y comprobar si existen capas de teselas vectoriales. Entrar como administrador, y observar c\u00f3mo est\u00e1 configurado GeoWebCach\u00e9 para las capas que sirven teselas vectoriales. Discutir ventajas y limitaciones de GeoServer.","title":"Caso pr\u00e1ctico: La extensi\u00f3n Vector Tiles de GeoServer"},{"location":"04_OGC.html#ejemplos-de-integracion-con-otros-servicios-de-ogc","text":"","title":"Ejemplos de integraci\u00f3n con otros servicios de OGC"},{"location":"04_OGC.html#wms","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 { \"sources\" : { \"pnoa-source\" : { \"type\" : \"raster\" , \"tiles\" : [ \"http://www.ign.es/wms-inspire/pnoa-ma?bbox={bbox-epsg-3857}&format=image/jpeg&service=WMS&version=1.1.1&request=GetMap&srs=EPSG:3857&width=256&height=256&layers=OI.OrthoimageCoverage\" ], \"tileSize\" : 256 } }, \"layers\" : [{ \"id\" : \"pnoa-layer\" , \"type\" : \"raster\" , \"source\" : \"pnoa-source\" }] } DEMO WMS imagen","title":"WMS:"},{"location":"04_OGC.html#wmts","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 { \"sources\" : { \"wmts-source\" : { \"type\" : \"raster\" , \"tiles\" : [ \"http://www.ign.es/wmts/pnoa-ma?Layer=OI.OrthoimageCoverage&Style=default&TileMatrixSet=GoogleMapsCompatible&Service=WMTS&Request=GetTile&Version=1.0.0&Format=image/jpeg&TileMatrix={z}&TileCol={x}&TileRow={y}\" ], \"tileSize\" : 256 } }, \"layers\" : [{ \"id\" : \"wmts-layer\" , \"type\" : \"raster\" , \"source\" : \"wmts-source\" }] } DEMO WMTS imagen","title":"WMTS:"},{"location":"04_OGC.html#wfs","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 { \"sources\" : { \"geojson-source\" : { \"type\" : \"geojson\" , \"data\" : \"http://demo.fonts.cat/geoserver/wfs?SERVICE=WFS&VERSION=1.1.0&REQUEST=GetFeature&TYPENAME=TMB:LINIES_METRO&outputFormat=json&srsName=EPSG:4326\" } }, \"layers\" : [{ \"id\" : \"geojson-layer\" , \"type\" : \"line\" , \"source\" : \"geojson-source\" , \"paint\" : { \"line-width\" : 5 , \"line-color\" : [ \"concat\" , \"#\" , [ \"get\" , \"COLOR_LINIA\" ]] } }] } DEMO WMTS imagen + WFS GeoJSON","title":"WFS:"},{"location":"04_OGC.html#teselas-vectoriales-como-tms","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 { \"sources\" : { \"vectortile-tms-source\" : { \"type\" : \"vector\" , \"tiles\" : [ \"http://demo.fonts.cat:8000/geoserver/gwc/service/tms/1.0.0/TMB%3ALINIES_METRO@EPSG%3A900913@pbf/{z}/{x}/{y}.pbf\" ], \"scheme\" : \"tms\" } }, \"layers\" : [{ \"id\" : \"vectortile-layer\" , \"type\" : \"line\" , \"source\" : \"vectortile-tms-source\" , \"source-layer\" : \"LINIES_METRO\" , \"paint\" : { \"line-width\" : 5 , \"line-color\" : [ \"concat\" , \"#\" , [ \"get\" , \"COLOR_LINIA\" ]] } }] } DEMO WMTS imagen + Vector Tile TMS","title":"Teselas Vectoriales como TMS:"},{"location":"05_sprites_glyphs.html","text":"Iconos y tipograf\u00edas Sprites (iconos) Definici\u00f3n Un sprite es una imagen individual que contiene todos los iconos incluidos en un estilo. Al combinar muchas im\u00e1genes peque\u00f1as en una sola imagen (sprite), se puede reducir el n\u00famero de solicitudes necesarias para recuperar todas las im\u00e1genes, mejorar el rendimiento y hacer que el mapa sea m\u00e1s r\u00e1pido. Los Sprites pueden tener un tama\u00f1o m\u00e1ximo de 1024x1024 p\u00edxeles (o 2048x2048 para pantallas con alta DPI). Cada sprite viene acompa\u00f1ado de un archivo JSON donde se define el nombre de cada icono, y su posici\u00f3n y tama\u00f1o para saber c\u00f3mo \"recortarlo\" de la imagen com\u00fan. M\u00e1s informaci\u00f3n en sobre sprites https://www.mapbox.com/help/define-sprite/ Cada uno de los iconos contenidos en un sprite se puede usar como textura para el fondo del mapa, patr\u00f3n de relleno para un pol\u00edgono, patr\u00f3n de dibujo para una l\u00ednea, o una imagen de icono (s\u00edmbolo puntual). La propiedad sprite de un estilo apunta a una URL incompleta , a partir de la cual se pueden encontrar los diferentes ficheros (sprites y json complementario). Por ejemplo, si en el style.json se indica: 1 2 3 4 { ... \"sprite\" : \"https://tileserver.geomatico.es/styles/dark-matter/sprite\" } En realidad dicha URL no existe. Pero s\u00ed existen los siguientes recursos (a\u00f1adiendo .png , .json , @2x.png y @2x.json respectivamente): http://tileserver.geomatico.es/styles/dark-matter/sprite.png Sprite a resoluci\u00f3n convencional http://tileserver.geomatico.es/styles/dark-matter/sprite.json JSON que define cada icono dentro del sprite http://tileserver.geomatico.es/styles/dark-matter/sprite@2x.png Sprite a resoluci\u00f3n doble (para pantallas Retina) http://tileserver.geomatico.es/styles/dark-matter/sprite@2x.json JSON que define cada icono dentro del sprite de resoluci\u00f3n doble Ejemplo de sprite: Uno de los elementos definidos en el JSON: 1 2 3 4 5 6 7 8 9 10 11 { ... \"airport_11\" : { \"height\" : 17 , \"width\" : 17 , \"x\" : 17 , \"y\" : 0 , \"pixelRatio\" : 1 }, .... } Caso pr\u00e1ctico: C\u00f3mo crear sprites propios Para generar los sprites a partir de im\u00e1genes individuales hay que crear los cuatro archivos. Esto se podr\u00eda hacer manualmente con un editor de texto, un editor de im\u00e1genes y mucha paciencia, pero afortunadamente existen herramientas que lo automatizan. Los sprites convencionales para la web difieren de los de Mapbox, ya que utilizan una imagen compuesta png y un archivo css con las reglas de simbolizaci\u00f3n para su aprovechamiento en p\u00e1ginas web. Mapbox GL, en cambio, necesita el fichero json , no un CSS. Para generar los sprites y sus json a partir de una colecci\u00f3n de im\u00e1genes en formato SVG, se recomienda el uso de la librer\u00eda spritezero-cli . A partir de los iconos SVG contenidos en https://github.com/geomatico/taller-vt-jiide/tree/master/ejercicios/05 Instalar spritezero (necesita node y npm): 1 npm install -g @geomatico/spritezero-cli Ejecutar spritezero para generar los iconos a resoluci\u00f3n est\u00e1ndar y a alta resoluci\u00f3n: 1 2 spritezero sprite icons spritezero -- retina sprite @2 x icons Una vez generados, los publicamos en la red para poder acceder a ellos desde nuestros estilos. Glyphs (tipograf\u00edas) En la propiedad glyphs de un estilo se indica una plantilla de URL para cargar tipograf\u00edas codificadas en PBF (el formato es distinto que MVT, ya que el .proto utilizado es distinto), que se usar\u00e1n para dibujar textos en el mapa. Por ejemplo: 1 2 3 4 { ... \"glyphs\" : \"https://tileserver.geomatico.es/fonts/{fontstack}/{range}.pbf\" } Esta plantilla de URL debe incluir dos tokens: {fontstack} es el nombre de la tipograf\u00eda. Por ejemplo Open Sans Bold . {range} es un rango de 256 puntos de c\u00f3digo Unicode (es decir, un subconjunto de letras o s\u00edmbolos). En funci\u00f3n del texto a mostrar, el visor solicitar\u00e1 los rangos necesarios. El primero es 0-255 . Una petici\u00f3n real tendr\u00eda la forma: https://tileserver.geomatico.es/fonts/Open%20Sans%20Bold/0-255.pbf Un glyph contiene una derivada de la tipograf\u00eda binaria llamada signed distance field que permite escalarla sin el pixelado. Una composici\u00f3n de varios glyphs dar\u00eda una imagen con este aspecto: Caso pr\u00e1ctico: C\u00f3mo crear glyphs propios Descargar el proyecto de github openmaptiles/fonts : 1 2 3 4 5 wget https://github.com/openmaptiles/fonts/archive/master.zip unzip master.zip cd fonts-master npm install node generate.js Al cabo de un rato, podemos ver los resultados en el directorio _output . Si no queremos generar una tipograf\u00eda determinada, basta con borrar el directorio que la contiene. Del mismo modo podemos a\u00f1adir tipograf\u00edas a\u00f1adiendo nuevos directorios y copiando dentro las tipograf\u00edas en formato TTF. El directorio _output no se borra entre ejecuciones, siempre se a\u00f1aden nuevas tipograf\u00edas sin borrar las anteriores. Finalmente, debemos publicar el contenido de _output en un servidor web, para que los visores de mapbox puedan acceder a \u00e9l.","title":"5. Iconos y tipograf\u00edas"},{"location":"05_sprites_glyphs.html#iconos-y-tipografias","text":"","title":"Iconos y tipograf\u00edas"},{"location":"05_sprites_glyphs.html#sprites-iconos","text":"Definici\u00f3n Un sprite es una imagen individual que contiene todos los iconos incluidos en un estilo. Al combinar muchas im\u00e1genes peque\u00f1as en una sola imagen (sprite), se puede reducir el n\u00famero de solicitudes necesarias para recuperar todas las im\u00e1genes, mejorar el rendimiento y hacer que el mapa sea m\u00e1s r\u00e1pido. Los Sprites pueden tener un tama\u00f1o m\u00e1ximo de 1024x1024 p\u00edxeles (o 2048x2048 para pantallas con alta DPI). Cada sprite viene acompa\u00f1ado de un archivo JSON donde se define el nombre de cada icono, y su posici\u00f3n y tama\u00f1o para saber c\u00f3mo \"recortarlo\" de la imagen com\u00fan. M\u00e1s informaci\u00f3n en sobre sprites https://www.mapbox.com/help/define-sprite/ Cada uno de los iconos contenidos en un sprite se puede usar como textura para el fondo del mapa, patr\u00f3n de relleno para un pol\u00edgono, patr\u00f3n de dibujo para una l\u00ednea, o una imagen de icono (s\u00edmbolo puntual). La propiedad sprite de un estilo apunta a una URL incompleta , a partir de la cual se pueden encontrar los diferentes ficheros (sprites y json complementario). Por ejemplo, si en el style.json se indica: 1 2 3 4 { ... \"sprite\" : \"https://tileserver.geomatico.es/styles/dark-matter/sprite\" } En realidad dicha URL no existe. Pero s\u00ed existen los siguientes recursos (a\u00f1adiendo .png , .json , @2x.png y @2x.json respectivamente): http://tileserver.geomatico.es/styles/dark-matter/sprite.png Sprite a resoluci\u00f3n convencional http://tileserver.geomatico.es/styles/dark-matter/sprite.json JSON que define cada icono dentro del sprite http://tileserver.geomatico.es/styles/dark-matter/sprite@2x.png Sprite a resoluci\u00f3n doble (para pantallas Retina) http://tileserver.geomatico.es/styles/dark-matter/sprite@2x.json JSON que define cada icono dentro del sprite de resoluci\u00f3n doble Ejemplo de sprite: Uno de los elementos definidos en el JSON: 1 2 3 4 5 6 7 8 9 10 11 { ... \"airport_11\" : { \"height\" : 17 , \"width\" : 17 , \"x\" : 17 , \"y\" : 0 , \"pixelRatio\" : 1 }, .... }","title":"Sprites (iconos)"},{"location":"05_sprites_glyphs.html#caso-practico-como-crear-sprites-propios","text":"Para generar los sprites a partir de im\u00e1genes individuales hay que crear los cuatro archivos. Esto se podr\u00eda hacer manualmente con un editor de texto, un editor de im\u00e1genes y mucha paciencia, pero afortunadamente existen herramientas que lo automatizan. Los sprites convencionales para la web difieren de los de Mapbox, ya que utilizan una imagen compuesta png y un archivo css con las reglas de simbolizaci\u00f3n para su aprovechamiento en p\u00e1ginas web. Mapbox GL, en cambio, necesita el fichero json , no un CSS. Para generar los sprites y sus json a partir de una colecci\u00f3n de im\u00e1genes en formato SVG, se recomienda el uso de la librer\u00eda spritezero-cli . A partir de los iconos SVG contenidos en https://github.com/geomatico/taller-vt-jiide/tree/master/ejercicios/05 Instalar spritezero (necesita node y npm): 1 npm install -g @geomatico/spritezero-cli Ejecutar spritezero para generar los iconos a resoluci\u00f3n est\u00e1ndar y a alta resoluci\u00f3n: 1 2 spritezero sprite icons spritezero -- retina sprite @2 x icons Una vez generados, los publicamos en la red para poder acceder a ellos desde nuestros estilos.","title":"Caso pr\u00e1ctico: C\u00f3mo crear sprites propios"},{"location":"05_sprites_glyphs.html#glyphs-tipografias","text":"En la propiedad glyphs de un estilo se indica una plantilla de URL para cargar tipograf\u00edas codificadas en PBF (el formato es distinto que MVT, ya que el .proto utilizado es distinto), que se usar\u00e1n para dibujar textos en el mapa. Por ejemplo: 1 2 3 4 { ... \"glyphs\" : \"https://tileserver.geomatico.es/fonts/{fontstack}/{range}.pbf\" } Esta plantilla de URL debe incluir dos tokens: {fontstack} es el nombre de la tipograf\u00eda. Por ejemplo Open Sans Bold . {range} es un rango de 256 puntos de c\u00f3digo Unicode (es decir, un subconjunto de letras o s\u00edmbolos). En funci\u00f3n del texto a mostrar, el visor solicitar\u00e1 los rangos necesarios. El primero es 0-255 . Una petici\u00f3n real tendr\u00eda la forma: https://tileserver.geomatico.es/fonts/Open%20Sans%20Bold/0-255.pbf Un glyph contiene una derivada de la tipograf\u00eda binaria llamada signed distance field que permite escalarla sin el pixelado. Una composici\u00f3n de varios glyphs dar\u00eda una imagen con este aspecto:","title":"Glyphs (tipograf\u00edas)"},{"location":"05_sprites_glyphs.html#caso-practico-como-crear-glyphs-propios","text":"Descargar el proyecto de github openmaptiles/fonts : 1 2 3 4 5 wget https://github.com/openmaptiles/fonts/archive/master.zip unzip master.zip cd fonts-master npm install node generate.js Al cabo de un rato, podemos ver los resultados en el directorio _output . Si no queremos generar una tipograf\u00eda determinada, basta con borrar el directorio que la contiene. Del mismo modo podemos a\u00f1adir tipograf\u00edas a\u00f1adiendo nuevos directorios y copiando dentro las tipograf\u00edas en formato TTF. El directorio _output no se borra entre ejecuciones, siempre se a\u00f1aden nuevas tipograf\u00edas sin borrar las anteriores. Finalmente, debemos publicar el contenido de _output en un servidor web, para que los visores de mapbox puedan acceder a \u00e9l.","title":"Caso pr\u00e1ctico: C\u00f3mo crear glyphs propios"},{"location":"06_estilos.html","text":"Una breve introducci\u00f3n de Mapbox Style Specification La especificaci\u00f3n de estilos de Mapbox es la piedra angular de la visualizaci\u00f3n de nuestras teselas vectoriales. Las teselas vectoriales viajan hasta el cliente y este es el encargado de aplicar la definici\u00f3n de estilos que hayamos preparado. Los estilos se definen mediante JSON y deber\u00e1n estar accesibles en una URL desde nuestro cliente. Ya que los estilos son aplicados por el cliente, podr\u00edamos cambiar estos sobre nuestros datos de manera din\u00e1mica sin necesidad de interactuar con el servidor, y a \u00a160fps!, obtneniendo visualizaciones muy din\u00e1micas. La especifiaci\u00f3n de Mapbox es extensa pero detallaremos algunas de las caracter\u00edsticas principales. Root En la raiz del estilo definiremos varias de las propiedades globales del mismo, como son la version de la especificaci\u00f3n que estamos usando y el name o nombre que le asignamos al estilo. 1 2 3 4 { \"version\" : 8 , \"name\" : \"Menorca Base\" } Algunas otras propiedades ser\u00e1n las que indicar\u00e1n la posici\u00f3n inicial del mapa como el \"center\", \"zoom\", \"bearing\" que ser\u00e1 el \u00e1ngulo con el que el mapa aparecer\u00e1 o el \"pitch\" que ser\u00e1 la inclinaci\u00f3n de la c\u00e1mara. 1 2 3 4 5 6 7 8 9 10 11 { \"version\" : 8 , \"name\" : \"Menorca Base\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , } Sprite y glyphs irian indicadas en esta secci\u00f3n tambi\u00e9n 1 2 3 4 5 6 7 8 9 10 11 12 13 { \"version\" : 8 , \"name\" : \"Menorca Base\" , \"sprite\" : \"https://raw.githubusercontent.com/openmaptiles/dark-matter-gl-style/gh-pages/sprite\" , \"glyphs\" : \"https://tileserver.geomatico.es/fonts/{fontstack}/{range}.pbf\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , } Tambi\u00e9n tendr\u00edamos una parte de \"metadata\" donde podremos definir metadatos del estilo. Sources En \"sources\" definiremos las fuentes de datos que queremos simbolizar. Tenemos diferentes tipos de fuentes que podemos usar dentro de Mapbox \"vector\" , \"raster\" , \"raster-dem\" , \"geojson\" , \"image\" , \"video\" . \"vector\" Podremos definir un fuente de tipo \"vector\" se definir\u00e1 de las sigiuentes formas, utilizando la URL de las tiles directamente en el servidor o la URL del TileJSON 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"version\" : 8 , \"name\" : \"Menorca Base\" , \"sprite\" : \"https://raw.githubusercontent.com/openmaptiles/dark-matter-gl-style/gh-pages/sprite\" , \"glyphs\" : \"https://tileserver.geomatico.es/fonts/{fontstack}/{range}.pbf\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , \"sources\" : { \"buildingparts\" : { \"type\" : \"vector\" , \"url\" : \"https://tileserver.geomatico.es/data/building_latest.json\" , \"minzoom\" : 10 , \"maxzoom\" : 15 } } } \"raster\" En el caso de un WMS deberemos incluir la URL del servicio que soporte EPSG:3857 con una plantilla \"{bbox-epsg-3857}\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \"version\" : 8 , \"name\" : \"Menorca Base\" , \"sprite\" : \"https://raw.githubusercontent.com/openmaptiles/dark-matter-gl-style/gh-pages/sprite\" , \"glyphs\" : \"https://tileserver.geomatico.es/fonts/{fontstack}/{range}.pbf\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , \"sources\" : { \"wms-source\" : { \"type\" : \"raster\" , \"tiles\" : [ \"http://www.ign.es/wms-inspire/pnoa-ma?bbox={bbox-epsg-3857}&format=image/jpeg&service=WMS&version=1.1.1&request=GetMap&srs=EPSG:3857&width=256&height=256&layers=OI.OrthoimageCoverage\" ], \"tileSize\" : 256 } } } Layers Cada \"source\" dispondr\u00e1 de una o m\u00faltiples capas que podremos referenciar desde esta secci\u00f3n del JSON y que ser\u00e1n el punto donde definiremos mediante dos grupos de propiedades, \"paint\" y \"layout\" el estilo de nuestros datos. Existen tambi\u00e9n m\u00faltiples tipos de capas \"background\" , \"fill\" , \"line\" , \"symbol\" , \"raster\" , \"circle\" , \"fill-extrusion\" , \"heatmap\" , \"hillshade\" y cada una de ellas tendr\u00e1 unas caracter\u00edsticas diferentes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 { \"version\" : 8 , \"name\" : \"Menorca Base\" , \"sprite\" : \"https://raw.githubusercontent.com/openmaptiles/dark-matter-gl-style/gh-pages/sprite\" , \"glyphs\" : \"https://tileserver.geomatico.es/fonts/{fontstack}/{range}.pbf\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , \"sources\" : { \"buildingparts\" : { \"type\" : \"vector\" , \"url\" : \"https://tileserver.geomatico.es/data/building_latest.json\" , \"minzoom\" : 10 , \"maxzoom\" : 15 } }, \"layers\" : [ { \"id\" : \"background\" , \"type\" : \"background\" , \"paint\" : { \"background-color\" : \"#f8f4f0\" } }, { \"id\" : \"building-3d\" , \"type\" : \"fill-extrusion\" , \"source\" : \"buildingparts\" , \"source-layer\" : \"buildingparts\" , \"paint\" : { \"fill-extrusion-color\" : \"#d9c7a5\" , \"fill-extrusion-height\" : { \"type\" : \"identity\" , \"property\" : \"floors\" }, \"fill-extrusion-base\" : 0 , \"fill-extrusion-opacity\" : 0.6 } } ] } Expresions Con las expresiones podemos definir formulas que modifican el valor de las propiedades usando los operadores que diponemos en Mapbox. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 { \"version\" : 8 , \"name\" : \"Menorca Online\" , \"sprite\" : \"mapbox://sprites/mapbox/streets-v8\" , \"glyphs\" : \"mapbox://fonts/mapbox/{fontstack}/{range}.pbf\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , \"sources\" : { \"buildingparts\" : { \"type\" : \"vector\" , \"url\" : \"https://tileserver.geomatico.es/data/building_latest.json\" , \"minzoom\" : 10 , \"maxzoom\" : 15 } }, \"layers\" : [ { \"id\" : \"building-3d\" , \"type\" : \"fill-extrusion\" , \"source\" : \"buildingparts\" , \"source-layer\" : \"buildingparts\" , \"paint\" : { \"fill-extrusion-color\" : \"#d9c7a5\" , \"fill-extrusion-height\" : [ \"*\" , 3 , [ \"get\" , \"floors\" ]], \"fill-extrusion-base\" : 0 , \"fill-extrusion-opacity\" : 0.6 } } ] } Caso pr\u00e1ctico: Menorca Online Cargar Menorca Online en el navegador e inspeccionar c\u00f3mo est\u00e1 hecho: https://labs.geomatico.es/taller-vt-jiide/ejemplos/menorca-online.html","title":"6. Especificaci\u00f3n de estilo \"Mapbox GL Style spec\""},{"location":"06_estilos.html#una-breve-introduccion-de-mapbox-style-specification","text":"La especificaci\u00f3n de estilos de Mapbox es la piedra angular de la visualizaci\u00f3n de nuestras teselas vectoriales. Las teselas vectoriales viajan hasta el cliente y este es el encargado de aplicar la definici\u00f3n de estilos que hayamos preparado. Los estilos se definen mediante JSON y deber\u00e1n estar accesibles en una URL desde nuestro cliente. Ya que los estilos son aplicados por el cliente, podr\u00edamos cambiar estos sobre nuestros datos de manera din\u00e1mica sin necesidad de interactuar con el servidor, y a \u00a160fps!, obtneniendo visualizaciones muy din\u00e1micas. La especifiaci\u00f3n de Mapbox es extensa pero detallaremos algunas de las caracter\u00edsticas principales.","title":"Una breve introducci\u00f3n de Mapbox Style Specification"},{"location":"06_estilos.html#root","text":"En la raiz del estilo definiremos varias de las propiedades globales del mismo, como son la version de la especificaci\u00f3n que estamos usando y el name o nombre que le asignamos al estilo. 1 2 3 4 { \"version\" : 8 , \"name\" : \"Menorca Base\" } Algunas otras propiedades ser\u00e1n las que indicar\u00e1n la posici\u00f3n inicial del mapa como el \"center\", \"zoom\", \"bearing\" que ser\u00e1 el \u00e1ngulo con el que el mapa aparecer\u00e1 o el \"pitch\" que ser\u00e1 la inclinaci\u00f3n de la c\u00e1mara. 1 2 3 4 5 6 7 8 9 10 11 { \"version\" : 8 , \"name\" : \"Menorca Base\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , } Sprite y glyphs irian indicadas en esta secci\u00f3n tambi\u00e9n 1 2 3 4 5 6 7 8 9 10 11 12 13 { \"version\" : 8 , \"name\" : \"Menorca Base\" , \"sprite\" : \"https://raw.githubusercontent.com/openmaptiles/dark-matter-gl-style/gh-pages/sprite\" , \"glyphs\" : \"https://tileserver.geomatico.es/fonts/{fontstack}/{range}.pbf\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , } Tambi\u00e9n tendr\u00edamos una parte de \"metadata\" donde podremos definir metadatos del estilo.","title":"Root"},{"location":"06_estilos.html#sources","text":"En \"sources\" definiremos las fuentes de datos que queremos simbolizar. Tenemos diferentes tipos de fuentes que podemos usar dentro de Mapbox \"vector\" , \"raster\" , \"raster-dem\" , \"geojson\" , \"image\" , \"video\" .","title":"Sources"},{"location":"06_estilos.html#vector","text":"Podremos definir un fuente de tipo \"vector\" se definir\u00e1 de las sigiuentes formas, utilizando la URL de las tiles directamente en el servidor o la URL del TileJSON 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 { \"version\" : 8 , \"name\" : \"Menorca Base\" , \"sprite\" : \"https://raw.githubusercontent.com/openmaptiles/dark-matter-gl-style/gh-pages/sprite\" , \"glyphs\" : \"https://tileserver.geomatico.es/fonts/{fontstack}/{range}.pbf\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , \"sources\" : { \"buildingparts\" : { \"type\" : \"vector\" , \"url\" : \"https://tileserver.geomatico.es/data/building_latest.json\" , \"minzoom\" : 10 , \"maxzoom\" : 15 } } }","title":"\"vector\""},{"location":"06_estilos.html#raster","text":"En el caso de un WMS deberemos incluir la URL del servicio que soporte EPSG:3857 con una plantilla \"{bbox-epsg-3857}\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 { \"version\" : 8 , \"name\" : \"Menorca Base\" , \"sprite\" : \"https://raw.githubusercontent.com/openmaptiles/dark-matter-gl-style/gh-pages/sprite\" , \"glyphs\" : \"https://tileserver.geomatico.es/fonts/{fontstack}/{range}.pbf\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , \"sources\" : { \"wms-source\" : { \"type\" : \"raster\" , \"tiles\" : [ \"http://www.ign.es/wms-inspire/pnoa-ma?bbox={bbox-epsg-3857}&format=image/jpeg&service=WMS&version=1.1.1&request=GetMap&srs=EPSG:3857&width=256&height=256&layers=OI.OrthoimageCoverage\" ], \"tileSize\" : 256 } } }","title":"\"raster\""},{"location":"06_estilos.html#layers","text":"Cada \"source\" dispondr\u00e1 de una o m\u00faltiples capas que podremos referenciar desde esta secci\u00f3n del JSON y que ser\u00e1n el punto donde definiremos mediante dos grupos de propiedades, \"paint\" y \"layout\" el estilo de nuestros datos. Existen tambi\u00e9n m\u00faltiples tipos de capas \"background\" , \"fill\" , \"line\" , \"symbol\" , \"raster\" , \"circle\" , \"fill-extrusion\" , \"heatmap\" , \"hillshade\" y cada una de ellas tendr\u00e1 unas caracter\u00edsticas diferentes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 { \"version\" : 8 , \"name\" : \"Menorca Base\" , \"sprite\" : \"https://raw.githubusercontent.com/openmaptiles/dark-matter-gl-style/gh-pages/sprite\" , \"glyphs\" : \"https://tileserver.geomatico.es/fonts/{fontstack}/{range}.pbf\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , \"sources\" : { \"buildingparts\" : { \"type\" : \"vector\" , \"url\" : \"https://tileserver.geomatico.es/data/building_latest.json\" , \"minzoom\" : 10 , \"maxzoom\" : 15 } }, \"layers\" : [ { \"id\" : \"background\" , \"type\" : \"background\" , \"paint\" : { \"background-color\" : \"#f8f4f0\" } }, { \"id\" : \"building-3d\" , \"type\" : \"fill-extrusion\" , \"source\" : \"buildingparts\" , \"source-layer\" : \"buildingparts\" , \"paint\" : { \"fill-extrusion-color\" : \"#d9c7a5\" , \"fill-extrusion-height\" : { \"type\" : \"identity\" , \"property\" : \"floors\" }, \"fill-extrusion-base\" : 0 , \"fill-extrusion-opacity\" : 0.6 } } ] }","title":"Layers"},{"location":"06_estilos.html#expresions","text":"Con las expresiones podemos definir formulas que modifican el valor de las propiedades usando los operadores que diponemos en Mapbox. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 { \"version\" : 8 , \"name\" : \"Menorca Online\" , \"sprite\" : \"mapbox://sprites/mapbox/streets-v8\" , \"glyphs\" : \"mapbox://fonts/mapbox/{fontstack}/{range}.pbf\" , \"center\" : [ 4.264113 , 39.892787 ], \"zoom\" : 12.5 , \"bearing\" : 0 , \"pitch\" : 30 , \"sources\" : { \"buildingparts\" : { \"type\" : \"vector\" , \"url\" : \"https://tileserver.geomatico.es/data/building_latest.json\" , \"minzoom\" : 10 , \"maxzoom\" : 15 } }, \"layers\" : [ { \"id\" : \"building-3d\" , \"type\" : \"fill-extrusion\" , \"source\" : \"buildingparts\" , \"source-layer\" : \"buildingparts\" , \"paint\" : { \"fill-extrusion-color\" : \"#d9c7a5\" , \"fill-extrusion-height\" : [ \"*\" , 3 , [ \"get\" , \"floors\" ]], \"fill-extrusion-base\" : 0 , \"fill-extrusion-opacity\" : 0.6 } } ] }","title":"Expresions"},{"location":"06_estilos.html#caso-practico-menorca-online","text":"Cargar Menorca Online en el navegador e inspeccionar c\u00f3mo est\u00e1 hecho: https://labs.geomatico.es/taller-vt-jiide/ejemplos/menorca-online.html","title":"Caso pr\u00e1ctico: Menorca Online"},{"location":"07_recursos.html","text":"Recursos adicionales Versi\u00f3n ampliada del taller Versi\u00f3n completa del taller, de 4 horas, donde se entra m\u00e1s en detalle en cada etapa, poniendo en marcha nuestros propios servidores: https://geoinquiets.github.io/taller-vt/ Versi\u00f3n reducida del taller Presentaci\u00f3n de car\u00e1cter muy pr\u00e1ctico: Publicar datos y crear visores sin instalar nada, haciendo uso de los servicios de MapBox: https://geoinquiets.github.io/vt-hackato-atm/ Documentaci\u00f3n oficial Mapbox GL La web de referencia tiene 4 pesta\u00f1as. Os estar\u00e9is moviendo entre las dos primeras, que contienen enlaces hacia los ejemplos de la tercera: API: https://www.mapbox.com/mapbox-gl-js/api/ Style Spec: https://www.mapbox.com/mapbox-gl-js/style-spec Examples: https://www.mapbox.com/mapbox-gl-js/example/simple-map/ Plugins: https://www.mapbox.com/mapbox-gl-js/plugins Otros enlaces Mayormente de Raf , nuestra fuente diaria de vitaminas, v\u00eda @geoinquiets . Awesome Vector Tiles Natural Earth Vector Tiles by Lukas Martinelli Tutorial de los Geoinquietos de Londres Tilemaker, de OSM a mbtiles de una tacada Qu\u00e9 son las teselas vectoriales (vector tiles) y c\u00f3mo generarlos con PostGIS / GeoServer Natural Earth Quickstart Style implemented with Tegola GeoServer MBStyle Cookbook GeoServer MBStyle Styling Workbook","title":"7. Recursos"},{"location":"07_recursos.html#recursos-adicionales","text":"","title":"Recursos adicionales"},{"location":"07_recursos.html#version-ampliada-del-taller","text":"Versi\u00f3n completa del taller, de 4 horas, donde se entra m\u00e1s en detalle en cada etapa, poniendo en marcha nuestros propios servidores: https://geoinquiets.github.io/taller-vt/","title":"Versi\u00f3n ampliada del taller"},{"location":"07_recursos.html#version-reducida-del-taller","text":"Presentaci\u00f3n de car\u00e1cter muy pr\u00e1ctico: Publicar datos y crear visores sin instalar nada, haciendo uso de los servicios de MapBox: https://geoinquiets.github.io/vt-hackato-atm/","title":"Versi\u00f3n reducida del taller"},{"location":"07_recursos.html#documentacion-oficial-mapbox-gl","text":"La web de referencia tiene 4 pesta\u00f1as. Os estar\u00e9is moviendo entre las dos primeras, que contienen enlaces hacia los ejemplos de la tercera: API: https://www.mapbox.com/mapbox-gl-js/api/ Style Spec: https://www.mapbox.com/mapbox-gl-js/style-spec Examples: https://www.mapbox.com/mapbox-gl-js/example/simple-map/ Plugins: https://www.mapbox.com/mapbox-gl-js/plugins","title":"Documentaci\u00f3n oficial Mapbox GL"},{"location":"07_recursos.html#otros-enlaces","text":"Mayormente de Raf , nuestra fuente diaria de vitaminas, v\u00eda @geoinquiets . Awesome Vector Tiles Natural Earth Vector Tiles by Lukas Martinelli Tutorial de los Geoinquietos de Londres Tilemaker, de OSM a mbtiles de una tacada Qu\u00e9 son las teselas vectoriales (vector tiles) y c\u00f3mo generarlos con PostGIS / GeoServer Natural Earth Quickstart Style implemented with Tegola GeoServer MBStyle Cookbook GeoServer MBStyle Styling Workbook","title":"Otros enlaces"}]}